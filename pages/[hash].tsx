 import { NextApiRequest, NextApiResponse, NextPage } from "next";
import Head from "next/head";
import { UpdateUrlInfo, Visit } from "../types";
import { urlInfColl } from "../db/url-info-collection";
import { formatLog } from "../utils";
 
export async function getServerSideProps(request: NextApiRequest, response: NextApiResponse) {
  const hash = request.query.hash as string;
  const isTest = request.query.test as string;
  const urlInfoCollection = await urlInfColl();
  const urlInfo = await urlInfoCollection.findOne({ uid: hash });
 
  if (urlInfo) {
    if (!isTest) {
      const from = (request.query.from ?? "unknown") as keyof Visit;
      console.info(formatLog(`from: ${from}`));
      const updateObj = new UpdateUrlInfo(urlInfo);
      updateObj.setLatestClick(new Date());
      updateObj.incVisitFrom(from)
      console.info(updateObj.$set);
      // TODO: save visit history
      await urlInfoCollection.updateOne(
        {
          _id: urlInfo._id,
        },
        {...updateObj.getUpdateObj()},
      );
    }

    return {
      redirect: {
        destination: urlInfo.link,
        permanent: false,
      },
    };
  }
 
  return {
    props: {},
  };
}
 
const HashPage: NextPage = () => {
  return (
    <div>
      <Head>
        <title>URL Shortener</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Requested link not found</h1>
    </div>
  );
};
 
export default HashPage;